#!/bin/bash
set -e

FFMPEG_DIR="$(dirname "$0")/.."
PICOLIBC_HOME="$FFMPEG_DIR/../picolibc/build/image/picolibc/x86_64-unknown-fromager"
CLANG_DIR="$(clang${LLVM_SUFFIX} -print-resource-dir)"

CFLAGS="-flto -mprefer-vector-width=1
    -nostdinc
    -isystem $CLANG_DIR/include
    -isystem $PICOLIBC_HOME/include
    "

# Note: if your LLVM binaries have a version suffix (such as `llvm-link-9`),
# set the `LLVM_SUFFIX` environment variable (e.g. `LLVM_SUFFIX=-9`).

# Set DRIVER_CFLAGS=-DSILENT to suppress driver logging output, which reduces
# syscalls.

# Build only the libraries we actually need.
make -j8 libavcodec/libavcodec.a libavformat/libavformat.a libavutil/libavutil.a

mkdir -p build/fromager
# Build the driver program.
clang${LLVM_SUFFIX} -c CVE-2013-0864/driver.c -o build/fromager/driver.o \
    $CFLAGS -I . $DRIVER_CFLAGS

# Unpack bitcode from the library files
mkdir -p work
cd work
for f in libavformat libavcodec libavutil; do
    mkdir -p $f
    (cd $f; ar x ../../$f/$f.a)
done
# Remove duplicate objects - otherwise we get symbol conflicts
rm libavcodec/log2_tab.o libavformat/log2_tab.o
cd ..


# Link the full libs + driver into a single bitcode file
llvm-link${LLVM_SUFFIX} -o build/fromager/driver-main.bc \
    build/fromager/driver.o work/*/*.o

# Optimize, removing unused public symbols
opt${LLVM_SUFFIX} \
    --internalize --internalize-public-api-list=main \
    --strip-debug --force-vector-width=1 \
    -O3 --scalarizer -O1 \
    build/fromager/driver-main.bc \
    -o build/fromager/driver-opt.bc

llvm-link${LLVM_SUFFIX} \
    build/fromager/driver-opt.bc \
    -o build/fromager/driver-full.bc
    #build/fromager/driver_secret.o \

llvm-link${LLVM_SUFFIX} \
    build/fromager/driver-full.bc \
    ../picolibc/build/image/picolibc/x86_64-unknown-fromager/lib/libc.bc \
    -o driver-link-full.bc

keep_symbols=main
keep_symbols=$keep_symbols,__llvm__memcpy__p0i8__p0i8__i64
keep_symbols=$keep_symbols,__llvm__memset__p0i8__i64

opt${LLVM_SUFFIX} \
    driver-link-full.bc \
    --internalize \
    --internalize-public-api-list="$keep_symbols" \
    --globaldce --strip-debug \
    -o driver-link.bc


# Disassemble to LLVM's textual IR format
llvm-dis${LLVM_SUFFIX} driver-link.bc -o driver-link.ll
# driver-link.bc and driver-link.ll are the final LLVM outputs.
sed -i -e 's/nofree//g' driver-link.ll

# Produce an executable
clang++${LLVM_SUFFIX} -o driver driver-opt.bc -lm -lpthread
