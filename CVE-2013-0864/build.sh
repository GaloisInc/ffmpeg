#!/bin/bash
set -e

FFMPEG_DIR="$(dirname "$0")/.."
PICOLIBC_HOME="$FFMPEG_DIR/../picolibc/build/image/picolibc/x86_64-unknown-fromager"
CLANG_DIR="$(clang${LLVM_SUFFIX} -print-resource-dir)"

CFLAGS="-flto -mprefer-vector-width=1
    -nostdinc
    -isystem $CLANG_DIR/include
    -isystem $PICOLIBC_HOME/include
    -ggdb
    "

# Note: if your LLVM binaries have a version suffix (such as `llvm-link-9`),
# set the `LLVM_SUFFIX` environment variable (e.g. `LLVM_SUFFIX=-9`).

# Set DRIVER_CFLAGS=-DSILENT to suppress driver logging output, which reduces
# syscalls.


# Common build steps

# Build only the libraries we actually need.
make -j8 libavcodec/libavcodec.a libavformat/libavformat.a libavutil/libavutil.a

mkdir -p build/fromager
# Build the driver program.
clang${LLVM_SUFFIX} -c CVE-2013-0864/driver.c -o build/fromager/driver.o \
    $CFLAGS -I . $DRIVER_CFLAGS
clang${LLVM_SUFFIX} -c CVE-2013-0864/driver_heap.c -o build/fromager/driver_heap.o \
    $CFLAGS -I . $DRIVER_CFLAGS
clang${LLVM_SUFFIX} -c CVE-2013-0864/driver_secret.c -o build/fromager/driver_secret.bc \
    $CFLAGS -I . $DRIVER_CFLAGS

# FFmpeg libraries use `--override` since they contain some multiply-defined
# symbols (e.g. log2_tab.o)
cc_objects="
        --override=libavcodec/libavcodec.a
        --override=libavformat/libavformat.a
        --override=libavutil/libavutil.a
        build/fromager/driver.o
        build/fromager/driver_heap.o
    " \
    cc_secret_objects=build/fromager/driver_secret.bc \
    $PICOLIBC_HOME/lib/fromager-link.sh
